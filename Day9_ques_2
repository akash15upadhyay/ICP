/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
        ListNode slow =head;
         ListNode fast =head;
          
         while(fast != null && fast.next != null){
            
            slow=slow.next;
            fast=fast.next.next;
         }
         
         ListNode current_node =slow; 
         ListNode prevnode =null;

         while(current_node != null){
          ListNode temp= current_node.next;   
          current_node.next=prevnode;
          prevnode = current_node;
          current_node=temp;

         }  

         ListNode rigth =  prevnode;
         ListNode left =  head;;
         
         while(rigth != null){
              if(rigth.val != left.val) return false;
            rigth=rigth.next;
             left=left.next;
         }

         return true;   
    }
}
